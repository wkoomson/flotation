dom-module#markdown-editor
	style.
		:host {
		  display: block;
		  box-sizing: border-box;
		}
		#editor {
			height: 100%;
			width: 100%;
		}
		#editor-input {
			width: 100%;
			height: 100%;
			font-size: 1rem;
			padding: 10%;
			border: none;
		}
	template
		div#editor
			textarea#editor-input

script.
	Polymer({

	  is: 'markdown-editor',

	  properties: {

		/**
		 * `fancy` indicates that the element should don a monocle and tophat,
		 * while checking its pocket watch.
		 */
		fancy: Boolean,

		/**
		 * Describes the author of the element, but is really just an excuse to
		 * show off JSDoc annotations.
		 *
		 * @type {{name: string, image: string}}
		 */
		author: {
		  type: Object,
		  // Use `value` to provides a default value for a property, by setting it
		  // on your element's prototype.
		  //
		  // If you provide a function, as we do here, Polymer will call that
		  // _per element instance_.
		  //
		  // We do that to ensure that each element gets its own copy of the
		  // value, rather than having it shared across all instances (via the
		  // prototype).editor
		  value: function() {
			return {
			  name:  'Willie Koomson',
			  image: 'http://addyosmani.com/blog/wp-content/uploads/2013/04/unicorn.jpg',
			};
		  }
		},

	  },

	  // Element Lifecycle

	  ready: function() {
		// `ready` is called after all elements have been configured, but
		// propagates bottom-up. This element's children are ready, but parents
		// are not.
		//
		// 'This is the point where you should make modifications to the DOM (when
		// necessary), or kick off any processes the element wants to perform.
	  },

	  attached: function() {
		console.log('markdown-editor has been attached to the DOM');
	  },

	  detached: function() {
		// The analog to `attached`, `detached` fires when the element has been
		// removed from a document.
		//
		// Use this to clean up anything you did in `attached`.
	  },

	  // Element Behavior

	  /**
	   * Sometimes it's just nice to say hi.
	   *
	   * @param {string} greeting A positive greeting.
	   * @return {string} The full greeting.
	   */
	  sayHello: function(greeting) {
		var response = greeting || 'Hello World!';
		return 'seed-element says, ' + response;
	  }

	});
